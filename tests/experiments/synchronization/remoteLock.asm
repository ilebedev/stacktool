309 instructions in 1 segments;
(no label):	309 instructions
push 0x0;	#arg count; start of __$boot
push -0x1;	#arg ptr
call_pc 0x48;	#call to __$global ; initialize globals
call_pc 0x1b;	#call to main ; transfer control to main
halt;	#end of platform main
push_thread;	#; start of stackem_getthreadid
pull 0x1;	
j;	
main2aux;	#; start of stackemlock_acquire
pull_cp 0x0;	
pull_cp 0x0;	
fnc_ld_ra 0x0;	
bnz 0x9;	
fnc_ld_rsv_em 0x0;	
bnz 0x8;	
push 0x1;	
pull 0x1;	
fnc_st 0x0;	
push 0x1;	
aux2main;	
j;	
drop 0x0;	
drop 0x0;	
push 0x0;	
aux2main;	
j;	
pull 0x1;	#var: 211; start of stackemlock_test
fnc_ld_ra 0x0;	
pull 0x1;	#var: 299
j;	
drop 0x1;	#var: 2; start of main
drop 0x1;	#var: 3
push 0x0;	
push -0x6000;	
sethi 0xff00;	
st 0x0;	
push 0x0;	
pull 0x1;	#var: 1
j_pc 0x1;	#to : @bb_main_while.cond.preheader # 
j_pc 0x1;	#to : @bb_main_while.cond # 
pull 0x1;	#var: 8
push 0x0;	
push -0x6000;	
sethi 0xff00;	
call_pc -0x24;	#call to stackemlock_acquire ; 
cmp_eq;	
bz 0x3;	#branch to false path, leading to @bb_main_while.end
pull 0x1;	#var: 1
j_pc -0x8;	#to @bb_main_while.cond # 
j_pc 0x1;	#to @bb_main_while.end # 
push -0x6000;	
sethi 0xff00;	
call_pc 0x11;	#call to stackemlock_release ; 
push 0x1;	
pull 0x1;	#var: 8
add;	
push 0xa;	
pull 0x1;	#var: 7
tuck_cp 0x1;	#var: 7
cmp_eq;	
pull 0x2;	#var: 1
tuck 0x1;	#var: 1
bz 0x3;	#branch to false path, leading to @bb_main_while.cond.preheader
drop 0x1;	#var: 7
j_pc 0x2;	#to @bb_main_for.end # 
j_pc -0x1a;	#to @bb_main_while.cond.preheader # 
push 0x0;	
pull 0x1;	#var: 1
j;	
pull 0x1;	#var: 111; start of stackemlock_release
push 0x0;	
pull 0x1;	#var: 111
fnc_st_ra_noack 0x0;	
j;	
j;	#return to boot routine; start of __$global
main2aux;	#; start of stackem_create_thread
sll 0x1;	
push 0x3;	
add;	
push_pc;	
add;	
j;	
newthread 0x0;	
j_pc 0xdb;	
newthread 0x1;	
j_pc 0xd9;	
newthread 0x2;	
j_pc 0xd7;	
newthread 0x3;	
j_pc 0xd5;	
newthread 0x4;	
j_pc 0xd3;	
newthread 0x5;	
j_pc 0xd1;	
newthread 0x6;	
j_pc 0xcf;	
newthread 0x7;	
j_pc 0xcd;	
newthread 0x8;	
j_pc 0xcb;	
newthread 0x9;	
j_pc 0xc9;	
newthread 0xa;	
j_pc 0xc7;	
newthread 0xb;	
j_pc 0xc5;	
newthread 0xc;	
j_pc 0xc3;	
newthread 0xd;	
j_pc 0xc1;	
newthread 0xe;	
j_pc 0xbf;	
newthread 0xf;	
j_pc 0xbd;	
newthread 0x10;	
j_pc 0xbb;	
newthread 0x11;	
j_pc 0xb9;	
newthread 0x12;	
j_pc 0xb7;	
newthread 0x13;	
j_pc 0xb5;	
newthread 0x14;	
j_pc 0xb3;	
newthread 0x15;	
j_pc 0xb1;	
newthread 0x16;	
j_pc 0xaf;	
newthread 0x17;	
j_pc 0xad;	
newthread 0x18;	
j_pc 0xab;	
newthread 0x19;	
j_pc 0xa9;	
newthread 0x1a;	
j_pc 0xa7;	
newthread 0x1b;	
j_pc 0xa5;	
newthread 0x1c;	
j_pc 0xa3;	
newthread 0x1d;	
j_pc 0xa1;	
newthread 0x1e;	
j_pc 0x9f;	
newthread 0x1f;	
j_pc 0x9d;	
newthread 0x20;	
j_pc 0x9b;	
newthread 0x21;	
j_pc 0x99;	
newthread 0x22;	
j_pc 0x97;	
newthread 0x23;	
j_pc 0x95;	
newthread 0x24;	
j_pc 0x93;	
newthread 0x25;	
j_pc 0x91;	
newthread 0x26;	
j_pc 0x8f;	
newthread 0x27;	
j_pc 0x8d;	
newthread 0x28;	
j_pc 0x8b;	
newthread 0x29;	
j_pc 0x89;	
newthread 0x2a;	
j_pc 0x87;	
newthread 0x2b;	
j_pc 0x85;	
newthread 0x2c;	
j_pc 0x83;	
newthread 0x2d;	
j_pc 0x81;	
newthread 0x2e;	
j_pc 0x7f;	
newthread 0x2f;	
j_pc 0x7d;	
newthread 0x30;	
j_pc 0x7b;	
newthread 0x31;	
j_pc 0x79;	
newthread 0x32;	
j_pc 0x77;	
newthread 0x33;	
j_pc 0x75;	
newthread 0x34;	
j_pc 0x73;	
newthread 0x35;	
j_pc 0x71;	
newthread 0x36;	
j_pc 0x6f;	
newthread 0x37;	
j_pc 0x6d;	
newthread 0x38;	
j_pc 0x6b;	
newthread 0x39;	
j_pc 0x69;	
newthread 0x3a;	
j_pc 0x67;	
newthread 0x3b;	
j_pc 0x65;	
newthread 0x3c;	
j_pc 0x63;	
newthread 0x3d;	
j_pc 0x61;	
newthread 0x3e;	
j_pc 0x5f;	
newthread 0x3f;	
j_pc 0x5d;	
newthread 0x40;	
j_pc 0x5b;	
newthread 0x41;	
j_pc 0x59;	
newthread 0x42;	
j_pc 0x57;	
newthread 0x43;	
j_pc 0x55;	
newthread 0x44;	
j_pc 0x53;	
newthread 0x45;	
j_pc 0x51;	
newthread 0x46;	
j_pc 0x4f;	
newthread 0x47;	
j_pc 0x4d;	
newthread 0x48;	
j_pc 0x4b;	
newthread 0x49;	
j_pc 0x49;	
newthread 0x4a;	
j_pc 0x47;	
newthread 0x4b;	
j_pc 0x45;	
newthread 0x4c;	
j_pc 0x43;	
newthread 0x4d;	
j_pc 0x41;	
newthread 0x4e;	
j_pc 0x3f;	
newthread 0x4f;	
j_pc 0x3d;	
newthread 0x50;	
j_pc 0x3b;	
newthread 0x51;	
j_pc 0x39;	
newthread 0x52;	
j_pc 0x37;	
newthread 0x53;	
j_pc 0x35;	
newthread 0x54;	
j_pc 0x33;	
newthread 0x55;	
j_pc 0x31;	
newthread 0x56;	
j_pc 0x2f;	
newthread 0x57;	
j_pc 0x2d;	
newthread 0x58;	
j_pc 0x2b;	
newthread 0x59;	
j_pc 0x29;	
newthread 0x5a;	
j_pc 0x27;	
newthread 0x5b;	
j_pc 0x25;	
newthread 0x5c;	
j_pc 0x23;	
newthread 0x5d;	
j_pc 0x21;	
newthread 0x5e;	
j_pc 0x1f;	
newthread 0x5f;	
j_pc 0x1d;	
newthread 0x60;	
j_pc 0x1b;	
newthread 0x61;	
j_pc 0x19;	
newthread 0x62;	
j_pc 0x17;	
newthread 0x63;	
j_pc 0x15;	
newthread 0x64;	
j_pc 0x13;	
newthread 0x65;	
j_pc 0x11;	
newthread 0x66;	
j_pc 0xf;	
newthread 0x67;	
j_pc 0xd;	
newthread 0x68;	
j_pc 0xb;	
newthread 0x69;	
j_pc 0x9;	
newthread 0x6a;	
j_pc 0x7;	
newthread 0x6b;	
j_pc 0x5;	
newthread 0x6c;	
j_pc 0x3;	
newthread 0x6d;	
j_pc 0x1;	
aux2main;	
j;	
drop 0x0;	#var: 299; start of stackem_halt
halt;	
pull 0x1;	#var: 11; start of stackemlock_allocate
call_pc -0xee;	#call to stackemlock_release ; 
j;	
