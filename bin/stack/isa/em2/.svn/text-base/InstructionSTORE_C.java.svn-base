package stack.isa.multicore;

import stack.isa.Instruction;
import stack.machine.Machine;

public class InstructionSTORE_C extends Instruction {
	int imm16;
	
	public InstructionSTORE_C(int imm16, String comment){
		super(comment);
		this.imm16 = imm16;
	}
	
	@Override
	public String toString() {
		return get_string(StackOP.STORE_C, imm16, getComment());
	}

	@Override
	public int toBinary() {
		return assemble(StackOP.STORE_C, imm16, 0, 0);
	}

	@Override
	public void execute(Machine M) {
		// store 2nd top value at address = top of the stack
		int addr = M.signExtend(16, imm16) + M.getStack(0).pop();
		int data = M.getStack(0).pop();
		M.store(addr, data);
	}
}
