package stack.isa.magic;

import stack.isa.Instruction;
import stack.machine.Machine;

public class InstructionMAGIC_BRANCH extends Instruction {
	String label;
	
	public InstructionMAGIC_BRANCH(String label, String comment){
		super(comment);
		this.label = label;
	}
	
	@Override
	public String toString() {
		return get_string(StackOP.MAGIC_BRANCH, label, getComment());
	}

	@Override
	public int toBinary() {
		return assemble(StackOP.MAGIC_BRANCH, 0, 0, 0);
	}

	@Override
	public void execute(Machine M) {
		// branch with a label target
		boolean condition = (0 != M.getStack(0).pop());
		
		if (condition){
			int address = M.getLabel(label);
			M.nPC = address;
		}
		// NOTE: POORLY DEFINED! TRUE = !FALSE, FALSE = 0. BOOLEAN VALUES ARE OUTPUTS OF COMPARISONS, UNDEFINED (can use lowest bit for test?)
	}
}
