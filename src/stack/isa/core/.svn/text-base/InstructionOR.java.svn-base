package stack.isa.core;

import stack.isa.Instruction;
import stack.machine.Machine;

public class InstructionOR extends Instruction {
	
	public InstructionOR(String comment){
		super(comment);
	}
	
	@Override
	public String toString() {
		return get_string(StackOP.OR, getComment());
	}

	@Override
	public int toBinary() {
		return assemble(StackOP.OR, 0, 0, 0);
	}

	@Override
	public void execute(Machine M) {
		// Push OR of 1st and 2nd item on stack
		int lhs = M.getStack(0).pop();
		int rhs = M.getStack(0).pop();
		int result = lhs | rhs;
		M.getStack(0).push(result);
	}
}
